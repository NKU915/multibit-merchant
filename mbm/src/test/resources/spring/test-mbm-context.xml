<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/jdbc
       http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

  <!-- Enables annotation driven configuration for tests -->
  <context:annotation-config/>

  <!-- DAOs and DTOs are in these packages and below for tests -->
  <context:component-scan base-package="org.multibit.mbm"/>

  <!-- Requires a configured TransactionManager -->
  <import resource="classpath:/spring/mbm-hibernate-service.xml" />

  <!-- Exception translation bean post processor -->
  <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

  <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
    <property name="sessionFactory" ref="sessionFactory"/>
  </bean>

  <!-- Hibernate db configuration -->
  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="packagesToScan">
      <list>
        <value>org.multibit.mbm.domain.model.model</value>
        <value>org.multibit.mbm.domain.model.pricing.rules</value>
      </list>
      </property>
    <property name="dataSource" ref="dataSource"/>
    <!-- Use Hibernate to provide a schema update DDL for development environment only
         This allows for rapid generation of the schema patch SQL
    -->
    <property name="schemaUpdate" value="true" />
    <property name="hibernateProperties">
      <props>
        <prop key="show_sql">true</prop>
        <prop key="format_sql">true</prop>
        <prop key="use_sql_comments">true</prop>
      </props>
    </property>
  </bean>

  <!-- Configure an empty simple HSQL connection as an embedded DataSource with no schema patch SQL -->
  <jdbc:embedded-database id="dataSource" />

  <!-- Integration tests require a database loader -->
  <bean id="databaseLoader" class="org.multibit.mbm.infrastructure.persistence.DatabaseLoader" init-method="initialise" />

</beans>
